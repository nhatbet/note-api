version: '3.4'
networks:
  app-network: null
services:
  nginx:
    image: nginx:stable-alpine
    container_name: nginx_${APP_NAME}
    ports:
      # - '8000:80'
      - '80:80'
    volumes:
      - ./:/var/www/html
      - ./nginx-default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php
      - mysql
    networks:
      - app-network
  php:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: 'php_${APP_NAME}'
    user: '${UID:-1000}:${GID:-1000}'
    volumes:
      - './:/var/www/html'
      - './php.ini:/usr/local/etc/php/php.ini'
    ports:
      - '9000:9000'
    networks:
      - app-network
  mysql:
    image: 'mysql:5.7.22'
    container_name: 'mysql_${APP_NAME}'
    restart: unless-stopped
    tty: true
    command: --sql_mode=''
    ports:
      - '3306:3306'
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    networks:
      - app-network
  composer:
    image: 'composer:latest'
    container_name: 'composer_${APP_NAME}'
    volumes:
      - './:/var/www/html'
    working_dir: /var/www/html
    networks:
      - app-network
